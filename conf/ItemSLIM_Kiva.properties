#dfs.data.dir=./FatSLIMRec/data
dfs.data.dir=data
#dfs.result.dir=./FatSLIMRec/result/
dfs.result.dir=result

dfs.log.dir=log
data.input.path=kiva_ratings
#data.input.path=ml-1m

data.column.format=UIR

#where the membership file is
data.membership.input.path=data/membership/kiva_5core/
#data.membership.input.path=data/membership/ml-1m/

rec.random.seed=201704

rec.similarity.class=cos
#rec.similarity.class=pcc
rec.similarity.shrinkage=10


#it's for calculating the item x item similarity
#should be set to "user" for userslim
rec.recommender.similarities=item
#rec.recommender.similarities=user

rec.recommender.isranking=true
rec.recommender.ranking.topn=10
rec.recommender.earlystop=true

rec.neighbors.knn.number=30
rec.iterator.maximum=50

#0.01, 0.001, 25
rec.slim.regularization.l1=0.001
rec.slim.regularization.l2=0.00001
# It should be an item balance controller
rec.slim.regularization.item.balance.controller=25
#for efficiency purposes we can only consider similarities above a threshold. default is 0.
#efficiency.similarity.threshold=0

#Baseline
#rec.recommender.class=BaseLineSLIM.ItemSLIMRecommender
#rec.recommender.class=BaseLineSLIM.UserSLIMRecommender

#Balanced ItemSlim
#rec.recommender.class=FatSLIM.Slim_FatItems_Recommender
#rec.recommender.class=FatSLIM.Balanced_ItemSLIM_Recommender_efficient

#Balanced UserSlim
#rec.recommender.class=FatSLIM.FatUserSLIMRecommender
#rec.recommender.class=FatSLIM.Balanced_UserSLIM_Recommender_efficient

#Using Librec
#rec.recommender.class=net.librec.recommender.cf.ranking.BLNSLIMUserRecommender
#rec.recommender.class=net.librec.recommender.cf.ranking.SLIMUserRecommender
#rec.recommender.class=net.librec.recommender.cf.ranking.SLIMRecommender
